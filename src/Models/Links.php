<?php

declare(strict_types=1);

/*
 * PaginationTesterLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace PaginationTesterLib\Models;

use PaginationTesterLib\ApiHelper;
use stdClass;

class Links implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $first;

    /**
     * @var string|null
     */
    private $last;

    /**
     * @var string|null
     */
    private $prev;

    /**
     * @var string|null
     */
    private $next;

    /**
     * Returns First.
     */
    public function getFirst(): ?string
    {
        return $this->first;
    }

    /**
     * Sets First.
     *
     * @maps first
     */
    public function setFirst(?string $first): void
    {
        $this->first = $first;
    }

    /**
     * Returns Last.
     */
    public function getLast(): ?string
    {
        return $this->last;
    }

    /**
     * Sets Last.
     *
     * @maps last
     */
    public function setLast(?string $last): void
    {
        $this->last = $last;
    }

    /**
     * Returns Prev.
     */
    public function getPrev(): ?string
    {
        return $this->prev;
    }

    /**
     * Sets Prev.
     *
     * @maps prev
     */
    public function setPrev(?string $prev): void
    {
        $this->prev = $prev;
    }

    /**
     * Returns Next.
     */
    public function getNext(): ?string
    {
        return $this->next;
    }

    /**
     * Sets Next.
     *
     * @maps next
     */
    public function setNext(?string $next): void
    {
        $this->next = $next;
    }

    /**
     * Converts the Links object to a human-readable string representation.
     *
     * @return string The string representation of the Links object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'Links',
            ['first' => $this->first, 'last' => $this->last, 'prev' => $this->prev, 'next' => $this->next]
        );
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->first)) {
            $json['first'] = $this->first;
        }
        if (isset($this->last)) {
            $json['last']  = $this->last;
        }
        if (isset($this->prev)) {
            $json['prev']  = $this->prev;
        }
        if (isset($this->next)) {
            $json['next']  = $this->next;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
