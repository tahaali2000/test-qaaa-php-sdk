<?php

declare(strict_types=1);

/*
 * PaginationTesterLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace PaginationTesterLib\Models\Builders;

use Core\Utils\CoreHelper;
use PaginationTesterLib\Models\Transaction;

/**
 * Builder for model Transaction
 *
 * @see Transaction
 */
class TransactionBuilder
{
    /**
     * @var Transaction
     */
    private $instance;

    private function __construct(Transaction $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new Transaction Builder object.
     */
    public static function init(): self
    {
        return new self(new Transaction());
    }

    /**
     * Sets id field.
     *
     * @param string|null $value
     */
    public function id(?string $value): self
    {
        $this->instance->setId($value);
        return $this;
    }

    /**
     * Sets amount field.
     *
     * @param float|null $value
     */
    public function amount(?float $value): self
    {
        $this->instance->setAmount($value);
        return $this;
    }

    /**
     * Sets timestamp field.
     *
     * @param \DateTime|null $value
     */
    public function timestamp(?\DateTime $value): self
    {
        $this->instance->setTimestamp($value);
        return $this;
    }

    /**
     * Initializes a new Transaction object.
     */
    public function build(): Transaction
    {
        return CoreHelper::clone($this->instance);
    }
}
