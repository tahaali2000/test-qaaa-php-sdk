<?php

declare(strict_types=1);

/*
 * PaginationTesterLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace PaginationTesterLib\Models\Builders;

use Core\Utils\CoreHelper;
use PaginationTesterLib\Models\Transaction;
use PaginationTesterLib\Models\TransactionsCursored;

/**
 * Builder for model TransactionsCursored
 *
 * @see TransactionsCursored
 */
class TransactionsCursoredBuilder
{
    /**
     * @var TransactionsCursored
     */
    private $instance;

    private function __construct(TransactionsCursored $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new Transactions Cursored Builder object.
     */
    public static function init(): self
    {
        return new self(new TransactionsCursored());
    }

    /**
     * Sets data field.
     *
     * @param Transaction[]|null $value
     */
    public function data(?array $value): self
    {
        $this->instance->setData($value);
        return $this;
    }

    /**
     * Sets next Cursor field.
     *
     * @param string|null $value
     */
    public function nextCursor(?string $value): self
    {
        $this->instance->setNextCursor($value);
        return $this;
    }

    /**
     * Unsets next Cursor field.
     */
    public function unsetNextCursor(): self
    {
        $this->instance->unsetNextCursor();
        return $this;
    }

    /**
     * Initializes a new Transactions Cursored object.
     */
    public function build(): TransactionsCursored
    {
        return CoreHelper::clone($this->instance);
    }
}
