<?php

declare(strict_types=1);

/*
 * PaginationTesterLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace PaginationTesterLib\Models;

use PaginationTesterLib\ApiHelper;
use stdClass;

class TransactionsCursored implements \JsonSerializable
{
    /**
     * @var Transaction[]|null
     */
    private $data;

    /**
     * @var array
     */
    private $nextCursor = [];

    /**
     * Returns Data.
     *
     * @return Transaction[]|null
     */
    public function getData(): ?array
    {
        return $this->data;
    }

    /**
     * Sets Data.
     *
     * @maps data
     *
     * @param Transaction[]|null $data
     */
    public function setData(?array $data): void
    {
        $this->data = $data;
    }

    /**
     * Returns Next Cursor.
     * Cursor for the next page of results.
     */
    public function getNextCursor(): ?string
    {
        if (count($this->nextCursor) == 0) {
            return null;
        }
        return $this->nextCursor['value'];
    }

    /**
     * Sets Next Cursor.
     * Cursor for the next page of results.
     *
     * @maps nextCursor
     */
    public function setNextCursor(?string $nextCursor): void
    {
        $this->nextCursor['value'] = $nextCursor;
    }

    /**
     * Unsets Next Cursor.
     * Cursor for the next page of results.
     */
    public function unsetNextCursor(): void
    {
        $this->nextCursor = [];
    }

    /**
     * Converts the TransactionsCursored object to a human-readable string representation.
     *
     * @return string The string representation of the TransactionsCursored object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'TransactionsCursored',
            ['data' => $this->data, 'nextCursor' => $this->getNextCursor()]
        );
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->data)) {
            $json['data']       = $this->data;
        }
        if (!empty($this->nextCursor)) {
            $json['nextCursor'] = $this->nextCursor['value'];
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
